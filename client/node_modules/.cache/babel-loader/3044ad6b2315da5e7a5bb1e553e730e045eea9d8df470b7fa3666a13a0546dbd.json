{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhu\\\\Travel_RAG_Final\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatMessage from './components/ChatMessage';\nimport ChatInput from './components/ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'assistant',\n    content: 'Hello! I\\'m your Ireland travel assistant. How can I help you today?'\n  }]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSendMessage = async content => {\n    try {\n      setIsLoading(true);\n\n      // Add user message to chat\n      const userMessage = {\n        role: 'user',\n        content\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // Prepare the chat request\n      const chatRequest = {\n        message: content,\n        conversation_history: messages.map(msg => ({\n          role: msg.role,\n          content: msg.content\n        }))\n      };\n\n      // Send request to API\n      console.log('Sending request to API:', chatRequest);\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(chatRequest),\n        credentials: 'omit'\n      });\n      console.log('Response status:', response.status);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Error response:', {\n          status: response.status,\n          statusText: response.statusText,\n          body: errorText\n        });\n        try {\n          const errorData = JSON.parse(errorText);\n          throw new Error(errorData.detail || 'Failed to get response from API');\n        } catch (parseError) {\n          throw new Error(`Failed to get response from API: ${errorText}`);\n        }\n      }\n      const data = await response.json();\n\n      // Add assistant's response to chat\n      const assistantMessage = {\n        role: 'assistant',\n        content: data.response\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      // Add error message to chat\n      const errorMessage = {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again.'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-blue-600 text-white p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"Ireland Travel Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 overflow-y-auto p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto space-y-4\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"max-w-3xl mx-auto w-full p-4\",\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {\n        onSendMessage: handleSendMessage,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"48ze5+hNpm45qa3HfiBLBPARaf4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatMessage","ChatInput","jsxDEV","_jsxDEV","App","_s","messages","setMessages","role","content","isLoading","setIsLoading","handleSendMessage","userMessage","prev","chatRequest","message","conversation_history","map","msg","console","log","response","fetch","method","headers","body","JSON","stringify","credentials","status","ok","errorText","text","error","statusText","errorData","parse","Error","detail","parseError","data","json","assistantMessage","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/madhu/Travel_RAG_Final/client/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ChatMessage from './components/ChatMessage';\r\nimport ChatInput from './components/ChatInput';\r\nimport { ChatMessage as ChatMessageType, ChatRequest, ChatResponse } from './types';\r\n\r\nconst App: React.FC = () => {\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([\r\n        {\r\n            role: 'assistant',\r\n            content: 'Hello! I\\'m your Ireland travel assistant. How can I help you today?'\r\n        }\r\n    ]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleSendMessage = async (content: string) => {\r\n        try {\r\n            setIsLoading(true);\r\n            \r\n            // Add user message to chat\r\n            const userMessage: ChatMessageType = { role: 'user', content };\r\n            setMessages(prev => [...prev, userMessage]);\r\n\r\n            // Prepare the chat request\r\n            const chatRequest: ChatRequest = {\r\n                message: content,\r\n                conversation_history: messages.map(msg => ({\r\n                    role: msg.role,\r\n                    content: msg.content\r\n                }))\r\n            };\r\n\r\n            // Send request to API\r\n            console.log('Sending request to API:', chatRequest);\r\n            const response = await fetch('/api/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(chatRequest),\r\n                credentials: 'omit'\r\n            });\r\n\r\n            console.log('Response status:', response.status);\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error('Error response:', {\r\n                    status: response.status,\r\n                    statusText: response.statusText,\r\n                    body: errorText\r\n                });\r\n                try {\r\n                    const errorData = JSON.parse(errorText);\r\n                    throw new Error(errorData.detail || 'Failed to get response from API');\r\n                } catch (parseError) {\r\n                    throw new Error(`Failed to get response from API: ${errorText}`);\r\n                }\r\n            }\r\n\r\n            const data: ChatResponse = await response.json();\r\n            \r\n            // Add assistant's response to chat\r\n            const assistantMessage: ChatMessageType = {\r\n                role: 'assistant',\r\n                content: data.response\r\n            };\r\n            setMessages(prev => [...prev, assistantMessage]);\r\n\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            // Add error message to chat\r\n            const errorMessage: ChatMessageType = {\r\n                role: 'assistant',\r\n                content: 'Sorry, I encountered an error. Please try again.'\r\n            };\r\n            setMessages(prev => [...prev, errorMessage]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-screen bg-gray-100\">\r\n            <header className=\"bg-blue-600 text-white p-4\">\r\n                <h1 className=\"text-2xl font-bold\">Ireland Travel Assistant</h1>\r\n            </header>\r\n            \r\n            <main className=\"flex-1 overflow-y-auto p-4\">\r\n                <div className=\"max-w-3xl mx-auto space-y-4\">\r\n                    {messages.map((message, index) => (\r\n                        <ChatMessage key={index} message={message} />\r\n                    ))}\r\n                </div>\r\n            </main>\r\n\r\n            <footer className=\"max-w-3xl mx-auto w-full p-4\">\r\n                <ChatInput \r\n                    onSendMessage={handleSendMessage}\r\n                    isLoading={isLoading}\r\n                />\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}