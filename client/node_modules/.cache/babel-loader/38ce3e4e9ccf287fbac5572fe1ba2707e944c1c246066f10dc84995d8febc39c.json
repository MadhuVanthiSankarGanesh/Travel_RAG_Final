{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhu\\\\Travel_RAG_Final\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatMessage from './components/ChatMessage';\nimport ChatInput from './components/ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'assistant',\n    content: 'Hello! I\\'m your Ireland travel assistant. How can I help you today?'\n  }]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSendMessage = async content => {\n    try {\n      setIsLoading(true);\n\n      // Add user message to chat\n      const userMessage = {\n        role: 'user',\n        content\n      };\n      setMessages(prev => [...prev, userMessage]);\n\n      // Prepare the chat request\n      const chatRequest = {\n        message: content,\n        conversation_history: messages.map(msg => ({\n          role: msg.role,\n          content: msg.content\n        }))\n      };\n      console.log('Preparing to send request to API:', {\n        url: '/chat',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: chatRequest\n      });\n\n      // Send request to API\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(chatRequest),\n        credentials: 'include'\n      });\n      console.log('Response received:', {\n        status: response.status,\n        statusText: response.statusText,\n        headers: Object.fromEntries(response.headers.entries())\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Error response details:', {\n          status: response.status,\n          statusText: response.statusText,\n          headers: Object.fromEntries(response.headers.entries()),\n          body: errorText\n        });\n        let errorMessage = 'Failed to get response from API';\n        try {\n          const errorData = JSON.parse(errorText);\n          errorMessage = errorData.detail || errorMessage;\n        } catch (parseError) {\n          console.error('Failed to parse error response:', parseError);\n          errorMessage = `${errorMessage}: ${errorText}`;\n        }\n        throw new Error(errorMessage);\n      }\n      const data = await response.json();\n      console.log('Parsed response data:', data);\n\n      // Add assistant's response to chat\n      const assistantMessage = {\n        role: 'assistant',\n        content: data.response\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error) {\n      console.error('Error in handleSendMessage:', error);\n      // Add error message to chat\n      const errorMessage = {\n        role: 'assistant',\n        content: error instanceof Error ? error.message : 'Sorry, I encountered an error. Please try again.'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-blue-600 text-white p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"Ireland Travel Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 overflow-y-auto p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto space-y-4\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"max-w-3xl mx-auto w-full p-4\",\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {\n        onSendMessage: handleSendMessage,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"48ze5+hNpm45qa3HfiBLBPARaf4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatMessage","ChatInput","jsxDEV","_jsxDEV","App","_s","messages","setMessages","role","content","isLoading","setIsLoading","handleSendMessage","userMessage","prev","chatRequest","message","conversation_history","map","msg","console","log","url","method","headers","body","response","fetch","JSON","stringify","credentials","status","statusText","Object","fromEntries","entries","ok","errorText","text","error","errorMessage","errorData","parse","detail","parseError","Error","data","json","assistantMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/madhu/Travel_RAG_Final/client/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ChatMessage from './components/ChatMessage';\r\nimport ChatInput from './components/ChatInput';\r\nimport { ChatMessage as ChatMessageType, ChatRequest, ChatResponse } from './types';\r\n\r\nconst App: React.FC = () => {\r\n    const [messages, setMessages] = useState<ChatMessageType[]>([\r\n        {\r\n            role: 'assistant',\r\n            content: 'Hello! I\\'m your Ireland travel assistant. How can I help you today?'\r\n        }\r\n    ]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleSendMessage = async (content: string) => {\r\n        try {\r\n            setIsLoading(true);\r\n            \r\n            // Add user message to chat\r\n            const userMessage: ChatMessageType = { role: 'user', content };\r\n            setMessages(prev => [...prev, userMessage]);\r\n\r\n            // Prepare the chat request\r\n            const chatRequest: ChatRequest = {\r\n                message: content,\r\n                conversation_history: messages.map(msg => ({\r\n                    role: msg.role,\r\n                    content: msg.content\r\n                }))\r\n            };\r\n\r\n            console.log('Preparing to send request to API:', {\r\n                url: '/chat',\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: chatRequest\r\n            });\r\n\r\n            // Send request to API\r\n            const response = await fetch('/api/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(chatRequest),\r\n                credentials: 'include'\r\n            });\r\n\r\n            console.log('Response received:', {\r\n                status: response.status,\r\n                statusText: response.statusText,\r\n                headers: Object.fromEntries(response.headers.entries())\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error('Error response details:', {\r\n                    status: response.status,\r\n                    statusText: response.statusText,\r\n                    headers: Object.fromEntries(response.headers.entries()),\r\n                    body: errorText\r\n                });\r\n                \r\n                let errorMessage = 'Failed to get response from API';\r\n                try {\r\n                    const errorData = JSON.parse(errorText);\r\n                    errorMessage = errorData.detail || errorMessage;\r\n                } catch (parseError) {\r\n                    console.error('Failed to parse error response:', parseError);\r\n                    errorMessage = `${errorMessage}: ${errorText}`;\r\n                }\r\n                throw new Error(errorMessage);\r\n            }\r\n\r\n            const data: ChatResponse = await response.json();\r\n            console.log('Parsed response data:', data);\r\n            \r\n            // Add assistant's response to chat\r\n            const assistantMessage: ChatMessageType = {\r\n                role: 'assistant',\r\n                content: data.response\r\n            };\r\n            setMessages(prev => [...prev, assistantMessage]);\r\n\r\n        } catch (error) {\r\n            console.error('Error in handleSendMessage:', error);\r\n            // Add error message to chat\r\n            const errorMessage: ChatMessageType = {\r\n                role: 'assistant',\r\n                content: error instanceof Error ? error.message : 'Sorry, I encountered an error. Please try again.'\r\n            };\r\n            setMessages(prev => [...prev, errorMessage]);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-screen bg-gray-100\">\r\n            <header className=\"bg-blue-600 text-white p-4\">\r\n                <h1 className=\"text-2xl font-bold\">Ireland Travel Assistant</h1>\r\n            </header>\r\n            \r\n            <main className=\"flex-1 overflow-y-auto p-4\">\r\n                <div className=\"max-w-3xl mx-auto space-y-4\">\r\n                    {messages.map((message, index) => (\r\n                        <ChatMessage key={index} message={message} />\r\n                    ))}\r\n                </div>\r\n            </main>\r\n\r\n            <footer className=\"max-w-3xl mx-auto w-full p-4\">\r\n                <ChatInput \r\n                    onSendMessage={handleSendMessage}\r\n                    isLoading={isLoading}\r\n                />\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAoB,CACxD;IACIS,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE;EACb,CAAC,CACJ,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,iBAAiB,GAAG,MAAOH,OAAe,IAAK;IACjD,IAAI;MACAE,YAAY,CAAC,IAAI,CAAC;;MAElB;MACA,MAAME,WAA4B,GAAG;QAAEL,IAAI,EAAE,MAAM;QAAEC;MAAQ,CAAC;MAC9DF,WAAW,CAACO,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,WAAW,CAAC,CAAC;;MAE3C;MACA,MAAME,WAAwB,GAAG;QAC7BC,OAAO,EAAEP,OAAO;QAChBQ,oBAAoB,EAAEX,QAAQ,CAACY,GAAG,CAACC,GAAG,KAAK;UACvCX,IAAI,EAAEW,GAAG,CAACX,IAAI;UACdC,OAAO,EAAEU,GAAG,CAACV;QACjB,CAAC,CAAC;MACN,CAAC;MAEDW,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE;QAC7CC,GAAG,EAAE,OAAO;QACZC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACd,CAAC;QACDC,IAAI,EAAEV;MACV,CAAC,CAAC;;MAEF;MACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;QACtCJ,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACd,CAAC;QACDC,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACd,WAAW,CAAC;QACjCe,WAAW,EAAE;MACjB,CAAC,CAAC;MAEFV,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;QAC9BU,MAAM,EAAEL,QAAQ,CAACK,MAAM;QACvBC,UAAU,EAAEN,QAAQ,CAACM,UAAU;QAC/BR,OAAO,EAAES,MAAM,CAACC,WAAW,CAACR,QAAQ,CAACF,OAAO,CAACW,OAAO,CAAC,CAAC;MAC1D,CAAC,CAAC;MAEF,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;QACd,MAAMC,SAAS,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACvClB,OAAO,CAACmB,KAAK,CAAC,yBAAyB,EAAE;UACrCR,MAAM,EAAEL,QAAQ,CAACK,MAAM;UACvBC,UAAU,EAAEN,QAAQ,CAACM,UAAU;UAC/BR,OAAO,EAAES,MAAM,CAACC,WAAW,CAACR,QAAQ,CAACF,OAAO,CAACW,OAAO,CAAC,CAAC,CAAC;UACvDV,IAAI,EAAEY;QACV,CAAC,CAAC;QAEF,IAAIG,YAAY,GAAG,iCAAiC;QACpD,IAAI;UACA,MAAMC,SAAS,GAAGb,IAAI,CAACc,KAAK,CAACL,SAAS,CAAC;UACvCG,YAAY,GAAGC,SAAS,CAACE,MAAM,IAAIH,YAAY;QACnD,CAAC,CAAC,OAAOI,UAAU,EAAE;UACjBxB,OAAO,CAACmB,KAAK,CAAC,iCAAiC,EAAEK,UAAU,CAAC;UAC5DJ,YAAY,GAAG,GAAGA,YAAY,KAAKH,SAAS,EAAE;QAClD;QACA,MAAM,IAAIQ,KAAK,CAACL,YAAY,CAAC;MACjC;MAEA,MAAMM,IAAkB,GAAG,MAAMpB,QAAQ,CAACqB,IAAI,CAAC,CAAC;MAChD3B,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEyB,IAAI,CAAC;;MAE1C;MACA,MAAME,gBAAiC,GAAG;QACtCxC,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAEqC,IAAI,CAACpB;MAClB,CAAC;MACDnB,WAAW,CAACO,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEkC,gBAAgB,CAAC,CAAC;IAEpD,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZnB,OAAO,CAACmB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD;MACA,MAAMC,YAA6B,GAAG;QAClChC,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE8B,KAAK,YAAYM,KAAK,GAAGN,KAAK,CAACvB,OAAO,GAAG;MACtD,CAAC;MACDT,WAAW,CAACO,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE0B,YAAY,CAAC,CAAC;IAChD,CAAC,SAAS;MACN7B,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAK8C,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBAC/C/C,OAAA;MAAQ8C,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eAC1C/C,OAAA;QAAI8C,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eAETnD,OAAA;MAAM8C,SAAS,EAAC,4BAA4B;MAAAC,QAAA,eACxC/C,OAAA;QAAK8C,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EACvC5C,QAAQ,CAACY,GAAG,CAAC,CAACF,OAAO,EAAEuC,KAAK,kBACzBpD,OAAA,CAACH,WAAW;UAAagB,OAAO,EAAEA;QAAQ,GAAxBuC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAC/C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAEPnD,OAAA;MAAQ8C,SAAS,EAAC,8BAA8B;MAAAC,QAAA,eAC5C/C,OAAA,CAACF,SAAS;QACNuD,aAAa,EAAE5C,iBAAkB;QACjCF,SAAS,EAAEA;MAAU;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACjD,EAAA,CAtHID,GAAa;AAAAqD,EAAA,GAAbrD,GAAa;AAwHnB,eAAeA,GAAG;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}